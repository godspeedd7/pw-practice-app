name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox

env:
  NODE_VERSION: 18

jobs:
  test:
    name: "Tests (${{ matrix.browser }}-${{ matrix.shard }})"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
        shard: [1, 2, 3, 4]
        include:
          - browser: chromium
            project: chromium
          - browser: firefox
            project: firefox

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --force

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}-${{ matrix.browser }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ matrix.browser }}-
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: npx playwright install ${{ matrix.browser }} --with-deps

      - name: Validate environment variables
        run: |
          missing_secrets=false
          if [ -z "${{ secrets.TEST_USER_EMAIL }}" ]; then
            echo "::error::TEST_USER_EMAIL secret is not set"
            missing_secrets=true
          fi
          if [ -z "${{ secrets.TEST_USER_PASSWORD }}" ]; then
            echo "::error::TEST_USER_PASSWORD secret is not set"
            missing_secrets=true
          fi
          if [ "$missing_secrets" = true ]; then
            echo "::error::Required secrets are missing. Tests may fail."
            exit 1
          fi
          echo "::notice::All required secrets are configured"

      - name: Start web server
        run: |
          npm run start:ci &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          
          # Wait for server with better error handling
          if npx wait-on http://localhost:4200 --timeout 120000 --interval 1000; then
            echo "::notice::Server started successfully on http://localhost:4200"
          else
            echo "::error::Server failed to start within timeout"
            kill $SERVER_PID 2>/dev/null || true
            exit 1
          fi

      - name: Run Playwright tests
        run: |
          # Skip if browser doesn't match selection
          if [ "${{ github.event.inputs.browser }}" != "all" ] && [ "${{ github.event.inputs.browser }}" != "" ] && [ "${{ github.event.inputs.browser }}" != "${{ matrix.browser }}" ]; then
            echo "::notice::Skipping ${{ matrix.browser }} as it doesn't match selected browser (${{ github.event.inputs.browser }})"
            exit 0
          fi
          
          echo "::group::Running Playwright tests for ${{ matrix.browser }} (shard ${{ matrix.shard }}/4)"
          npx playwright test --project=${{ matrix.project }} --config playwright.ci.config.ts --reporter=html,blob --shard=${{ matrix.shard }}/4
          echo "::endgroup::"
        env:
          BASE_URL: ${{ secrets.BASE_URL || 'http://localhost:4200' }}
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
          TEST_DELETE_EMAIL: ${{ secrets.TEST_DELETE_EMAIL }}
          TEST_EDIT_EMAIL: ${{ secrets.TEST_EDIT_EMAIL }}
          TEST_AGE_FILTERS: ${{ secrets.TEST_AGE_FILTERS }}
          CI: true
          NODE_ENV: test
          PLAYWRIGHT_HTML_REPORT: playwright-report-${{ matrix.browser }}

      - name: Stop web server
        if: always()
        run: |
          if [ ! -z "$SERVER_PID" ]; then
            echo "::notice::Stopping server (PID: $SERVER_PID)"
            kill $SERVER_PID || true
            # Wait a moment for graceful shutdown
            sleep 2
          fi

      - name: Upload individual HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-report-${{ matrix.browser }}-${{ matrix.shard }}
          path: playwright-report-${{ matrix.browser }}/
          retention-days: 14

      - name: Upload blob report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.browser }}-${{ matrix.shard }}
          path: blob-report/
          retention-days: 1

      - name: Upload traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: traces-${{ matrix.browser }}-${{ matrix.shard }}
          path: test-results/**/trace.zip
          retention-days: 14

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos-${{ matrix.browser }}-${{ matrix.shard }}
          path: test-results/
          retention-days: 7

  merge-reports:
    name: "Merge Reports"
    if: always()
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --force

      - name: Download blob reports
        uses: actions/download-artifact@v4
        with:
          pattern: blob-report-*
          path: all-blob-reports
          merge-multiple: true

      - name: Verify blob reports
        run: |
          echo "::group::Blob reports verification"
          if [ ! -d "all-blob-reports" ]; then
            echo "::error::No blob reports directory found"
            exit 1
          fi
          
          blob_count=$(find all-blob-reports -type f -name "*.zip" | wc -l)
          echo "Found $blob_count blob report files"
          
          if [ "$blob_count" -eq 0 ]; then
            echo "::error::No blob report files found"
            exit 1
          fi
          
          echo "Blob report files:"
          find all-blob-reports -type f -name "*.zip" | sort
          echo "::endgroup::"

      - name: Merge into HTML Report
        run: |
          echo "::group::Merging reports"
          npx playwright merge-reports --reporter html ./all-blob-reports
          echo "::endgroup::"

      - name: Upload merged HTML report
        uses: actions/upload-artifact@v4
        with:
          name: merged-html-report--attempt-${{ github.run_attempt }}
          path: playwright-report/
          retention-days: 14

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if merged report exists
            const reportExists = fs.existsSync('playwright-report/index.html');
            const runUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            
            const comment = `## üé≠ Playwright Test Results
            
            **Test run completed for commit:** \`${{ github.sha }}\`
            **Browser selection:** ${{ github.event.inputs.browser || 'all' }}
            **Run attempt:** ${{ github.run_attempt }}
            
            ${reportExists ? '‚úÖ' : '‚ùå'} **Merged Report:** ${reportExists ? 'Available' : 'Failed to generate'}
            
            ### üìä Available Reports:
            - üìã [Merged HTML Report](${runUrl}) (Download: \`merged-html-report--attempt-${{ github.run_attempt }}\`)
            - üîç [Individual Browser Reports](${runUrl}) (Download: \`html-report-*\`)
            - üé¨ [Test Videos](${runUrl}) (Download: \`test-videos-*\` - only if tests failed)
            - üìä [Traces](${runUrl}) (Download: \`traces-*\`)
            
            **Browsers tested:** Chromium, Firefox
            
            ---
            *View detailed results and download artifacts from the [Actions run](${runUrl})*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });